2005-10-31  James E. Wilson  <wilson@specifix.com>

	PR debug/24444
	* dwarf2out.c (convert_cfa_to_loc_list): Put inside DWARF2_UNWIND_INFO
	ifdef.	Put ifdefs around call in gen_subprogram_die.
	(compute_frame_pointer_to_cfa_displacement): Likewise.
	(gen_subprogram_die): Restore old code for when DWARF2_UNWIND_INFO is
	not defined.

--- gcc/dwarf2out.c.orig	2005-11-21 07:57:57.000000000 -0200
+++ gcc/dwarf2out.c	2005-12-20 16:46:22.000000000 -0200
@@ -10047,6 +10047,7 @@ tree_add_const_value_attribute (dw_die_r
     }
 }
 
+#ifdef DWARF2_UNWIND_INFO
 /* Convert the CFI instructions for the current function into a location
    list.  This is used for DW_AT_frame_base when we targeting a dwarf2
    consumer that does not support the dwarf3 DW_OP_call_frame_cfa.  */
@@ -10138,6 +10139,7 @@ compute_frame_pointer_to_cfa_displacemen
 
   frame_pointer_cfa_offset = -offset;
 }
+#endif
 
 /* Generate a DW_AT_name attribute given some string value to be included as
    the value of the attribute.  */
@@ -11385,6 +11387,7 @@ gen_subprogram_die (tree decl, dw_die_re
       add_AT_fde_ref (subr_die, DW_AT_MIPS_fde, current_funcdef_fde);
 #endif
 
+#ifdef DWARF2_UNWIND_INFO
       /* We define the "frame base" as the function's CFA.  This is more
 	 convenient for several reasons: (1) It's stable across the prologue
 	 and epilogue, which makes it better than just a frame pointer,
@@ -11411,6 +11414,17 @@ gen_subprogram_die (tree decl, dw_die_re
 	 debugger about.  We'll need to adjust all frame_base references
 	 by this displacement.  */
       compute_frame_pointer_to_cfa_displacement ();
+#else
+      /* For targets which support DWARF2, but not DWARF2 call-frame info,
+	 we just use the stack pointer or frame pointer.  */
+      /* ??? Should investigate getting better info via callbacks, or else
+	 by interpreting the IA-64 unwind info.  */
+      {
+	rtx fp_reg
+	  = frame_pointer_needed ? hard_frame_pointer_rtx : stack_pointer_rtx;
+	add_AT_loc (subr_die, DW_AT_frame_base, reg_loc_descriptor (fp_reg));
+      }
+#endif
 
 #if 0
       /* ??? This fails for nested inline functions, because context_display
